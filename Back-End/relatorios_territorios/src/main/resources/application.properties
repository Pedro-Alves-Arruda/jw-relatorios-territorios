spring.application.name=relatorios_territorios

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


spring.kafka.bootstrap-servers=localhost:9094
spring.kafka.properties.security.protocol=SSL

spring.kafka.properties.ssl.truststore.location=C:/jw-relatorios-territorios/Back-End/relatorios_territorios/certs-localhost/client.truststore.p12
spring.kafka.properties.ssl.truststore.password=changeit
spring.kafka.properties.ssl.truststore.type=PKCS12

spring.kafka.properties.ssl.keystore.location=C:/jw-relatorios-territorios/Back-End/relatorios_territorios/certs-localhost/client.keystore.p12
spring.kafka.properties.ssl.keystore.password=changeit
spring.kafka.properties.ssl.key.password=changeit
spring.kafka.properties.ssl.keystore.type=PKCS12

spring.kafka.properties.ssl.endpoint.identification.algorithm=

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.cache.type=redis

spring.application.name=relatorios_territorios

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


spring.kafka.bootstrap-servers=localhost:9094
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Endereços que o broker escuta
listeners=SASL_SSL://0.0.0.0:9093
advertised.listeners=SASL_SSL://3.91.56.54:9093

# Mapear protocolo
listener.security.protocol.map=SASL_SSL:SASL_SSL
inter.broker.listener.name=SASL_SSL

# SSL
ssl.keystore.type=PKCS12
ssl.keystore.location=/opt/kafka/certs/broker-keystore.p12
ssl.keystore.password=changeit
ssl.key.password=changeit
ssl.truststore.type=PKCS12
ssl.truststore.location=/opt/kafka/certs/truststore.p12
ssl.truststore.password=changeit

# SASL SCRAM
sasl.enabled.mechanisms=SCRAM-SHA-512
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-512


